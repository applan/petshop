<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.UserMapper">

<!--회원 아이디 찾기  -->
<select id="selectById" resultType="com.spring.domain.UserVO">
	select * from pet_user where userid=#{userid}
</select>

<insert id="registMember">
		insert into pet_user(userno,userid,password,username,addr,email,cat,dog,emailcheck)
		values(rno_seq.nextVal,#{userid},#{password},#{username},#{addr},#{email},
		#{cat,jdbcType=VARCHAR},#{dog,jdbcType=VARCHAR},#{emailcheck,jdbcType=VARCHAR})
</insert>

<!-- 회원 로그인  -->
<select id="selectMember" resultType="com.spring.domain.AuthInfo">
		select * from pet_user
		where userid=#{userid} and password =#{current_password}
</select>
<!--회원 탈퇴 -->
<delete id ="deleteMember">
		delete from pet_user
		where userid =#{userid}
</delete>

<!--비밀번호 바꾸기  -->
<update id ="updateMember">
	update pet_user set password=#{new_password}, addr=#{new_addr}, email=#{new_email}, 
	dog=#{dog,jdbcType=VARCHAR}, cat=#{cat,jdbcType=VARCHAR}, emailcheck=#{emailcheckjdbcType=VARCHAR}
	where  userid =#{userid} and username=#{username}
</update>
<!-- 비밀번호 찾기 -->
<update id="passwordfind">
	update pet_user set password=#{password} where userid=#{userid} and email=#{email}
</update>
<!-- 아이디 찾기 -->
<select id="useridfind" resultType="com.spring.domain.UserVO">
	select userid, username from pet_user where username=#{username} and email=#{email}
</select>
<select id="edit" resultType="com.spring.domain.AuthInfo">
	select userid, username, addr, cat, dog, email, emailcheck from pet_user where userno=#{userno} and num=#{num}
</select>
</mapper>